import {replyOrEditMessage} from "../custom_methods";
import {backToMainMenuKb, confirmAddReminderKb, selectDateKb, selectUTCTimeKb} from "../keyboard";
import {MyContext, states} from "../types";
import {getReminderText} from "../texts";
import {Moment} from "moment";
import {UsersTableModel} from "../../database/models/tables";


async function input_reminder_text(ctx: MyContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    await replyOrEditMessage("<b>üìù –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:</b>", {
        reply_markup: backToMainMenuKb,
        parse_mode: "HTML"
    }, ctx);
    ctx.session.state = states.reminderMessageText;
}

async function input_reminder_date(ctx: MyContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    await replyOrEditMessage(
        "<b>üìù –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç —Å–Ω–∏–∑—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ <code>–¥–¥.–º–º.–≥–≥–≥–≥</code>:</b>",
        {reply_markup: selectDateKb(), parse_mode: "HTML"},
        ctx
    )
    ctx.session.state = states.inputReminderDate;
}

async function input_reminder_time(ctx: MyContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    await replyOrEditMessage("<b>üìù –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ <code>—á—á:–º–º</code> (24-hour):</b>", {
        reply_markup: selectUTCTimeKb(),
        parse_mode: "HTML"
    }, ctx)
    ctx.session.state = states.inputReminderTime;
}

async function input_reminder_confirm(ctx: MyContext, reminderDateTime: Moment, userData: UsersTableModel) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    await replyOrEditMessage(
        getReminderText(reminderDateTime, ctx.session.stateData.reminderMessageText, userData.timezone!),
        {parse_mode: "HTML", reply_markup: confirmAddReminderKb},
        ctx
    );

    ctx.session.state = states.inputReminderConfirm;
}

export {input_reminder_text, input_reminder_date, input_reminder_time, input_reminder_confirm};
